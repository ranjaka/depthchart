<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.exercise.depthchart.service.BusinessLogicTest" time="0.742" tests="6" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="13"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/ranjakademel/Documents/Personal/tutorials/depthchart/target/test-classes:/Users/ranjakademel/Documents/Personal/tutorials/depthchart/target/classes:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.8/spring-boot-starter-web-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.8/spring-boot-starter-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot/2.5.8/spring-boot-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.8/spring-boot-autoconfigure-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.8/spring-boot-starter-logging-2.5.8.jar:/Users/ranjakademel/.m2/repository/ch/qos/logback/logback-classic/1.2.9/logback-classic-1.2.9.jar:/Users/ranjakademel/.m2/repository/ch/qos/logback/logback-core/1.2.9/logback-core-1.2.9.jar:/Users/ranjakademel/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.0/log4j-to-slf4j-2.17.0.jar:/Users/ranjakademel/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.0/log4j-api-2.17.0.jar:/Users/ranjakademel/.m2/repository/org/slf4j/jul-to-slf4j/1.7.32/jul-to-slf4j-1.7.32.jar:/Users/ranjakademel/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/ranjakademel/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.8/spring-boot-starter-json-2.5.8.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.6/jackson-datatype-jdk8-2.12.6.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.6/jackson-datatype-jsr310-2.12.6.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.6/jackson-module-parameter-names-2.12.6.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.8/spring-boot-starter-tomcat-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.56/tomcat-embed-core-9.0.56.jar:/Users/ranjakademel/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.56/tomcat-embed-el-9.0.56.jar:/Users/ranjakademel/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.56/tomcat-embed-websocket-9.0.56.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-web/5.3.14/spring-web-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-webmvc/5.3.14/spring-webmvc-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-test/2.5.8/spring-boot-starter-test-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-test/2.5.8/spring-boot-test-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.5.8/spring-boot-test-autoconfigure-2.5.8.jar:/Users/ranjakademel/.m2/repository/com/jayway/jsonpath/json-path/2.5.0/json-path-2.5.0.jar:/Users/ranjakademel/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/Users/ranjakademel/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/Users/ranjakademel/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/ranjakademel/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/Users/ranjakademel/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/ranjakademel/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/ranjakademel/.m2/repository/org/assertj/assertj-core/3.19.0/assertj-core-3.19.0.jar:/Users/ranjakademel/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/ranjakademel/.m2/repository/org/junit/jupiter/junit-jupiter/5.7.2/junit-jupiter-5.7.2.jar:/Users/ranjakademel/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/Users/ranjakademel/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/ranjakademel/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/ranjakademel/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/Users/ranjakademel/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/Users/ranjakademel/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/Users/ranjakademel/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/Users/ranjakademel/.m2/repository/org/mockito/mockito-core/3.9.0/mockito-core-3.9.0.jar:/Users/ranjakademel/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/ranjakademel/.m2/repository/net/bytebuddy/byte-buddy-agent/1.10.22/byte-buddy-agent-1.10.22.jar:/Users/ranjakademel/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/Users/ranjakademel/.m2/repository/org/mockito/mockito-junit-jupiter/3.9.0/mockito-junit-jupiter-3.9.0.jar:/Users/ranjakademel/.m2/repository/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/Users/ranjakademel/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-test/5.3.14/spring-test-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/xmlunit/xmlunit-core/2.8.4/xmlunit-core-2.8.4.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.8/spring-boot-starter-data-jpa-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.8/spring-boot-starter-aop-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.8/spring-boot-starter-jdbc-2.5.8.jar:/Users/ranjakademel/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-jdbc/5.3.14/spring-jdbc-5.3.14.jar:/Users/ranjakademel/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/ranjakademel/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/ranjakademel/.m2/repository/org/hibernate/hibernate-core/5.4.33/hibernate-core-5.4.33.jar:/Users/ranjakademel/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/ranjakademel/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/ranjakademel/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/ranjakademel/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/ranjakademel/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/ranjakademel/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/ranjakademel/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.5/jaxb-runtime-2.3.5.jar:/Users/ranjakademel/.m2/repository/org/glassfish/jaxb/txw2/2.3.5/txw2-2.3.5.jar:/Users/ranjakademel/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/ranjakademel/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/ranjakademel/.m2/repository/org/springframework/data/spring-data-jpa/2.5.7/spring-data-jpa-2.5.7.jar:/Users/ranjakademel/.m2/repository/org/springframework/data/spring-data-commons/2.5.7/spring-data-commons-2.5.7.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-orm/5.3.14/spring-orm-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-tx/5.3.14/spring-tx-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-aspects/5.3.14/spring-aspects-5.3.14.jar:/Users/ranjakademel/.m2/repository/com/h2database/h2/2.0.206/h2-2.0.206.jar:/Users/ranjakademel/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.6/jackson-databind-2.12.6.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.6/jackson-core-2.12.6.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.6/jackson-annotations-2.12.6.jar:/Users/ranjakademel/.m2/repository/org/projectlombok/lombok/1.18.20/lombok-1.18.20.jar:/Users/ranjakademel/.m2/repository/org/mapstruct/mapstruct/1.4.2.Final/mapstruct-1.4.2.Final.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Australia/Melbourne"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="13"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="AU"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/ranjakademel/Documents/Personal/tutorials/depthchart/target/surefire/surefirebooter2660267494728524622.jar /Users/ranjakademel/Documents/Personal/tutorials/depthchart/target/surefire 2022-04-11T17-21-08_952-jvmRun1 surefire5992887393255164283tmp surefire_013605778968423081476tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/ranjakademel/Documents/Personal/tutorials/depthchart/target/test-classes:/Users/ranjakademel/Documents/Personal/tutorials/depthchart/target/classes:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.8/spring-boot-starter-web-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.8/spring-boot-starter-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot/2.5.8/spring-boot-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.8/spring-boot-autoconfigure-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.8/spring-boot-starter-logging-2.5.8.jar:/Users/ranjakademel/.m2/repository/ch/qos/logback/logback-classic/1.2.9/logback-classic-1.2.9.jar:/Users/ranjakademel/.m2/repository/ch/qos/logback/logback-core/1.2.9/logback-core-1.2.9.jar:/Users/ranjakademel/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.0/log4j-to-slf4j-2.17.0.jar:/Users/ranjakademel/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.0/log4j-api-2.17.0.jar:/Users/ranjakademel/.m2/repository/org/slf4j/jul-to-slf4j/1.7.32/jul-to-slf4j-1.7.32.jar:/Users/ranjakademel/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/ranjakademel/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.8/spring-boot-starter-json-2.5.8.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.6/jackson-datatype-jdk8-2.12.6.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.6/jackson-datatype-jsr310-2.12.6.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.6/jackson-module-parameter-names-2.12.6.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.8/spring-boot-starter-tomcat-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.56/tomcat-embed-core-9.0.56.jar:/Users/ranjakademel/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.56/tomcat-embed-el-9.0.56.jar:/Users/ranjakademel/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.56/tomcat-embed-websocket-9.0.56.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-web/5.3.14/spring-web-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-beans/5.3.14/spring-beans-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-webmvc/5.3.14/spring-webmvc-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-aop/5.3.14/spring-aop-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-context/5.3.14/spring-context-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-expression/5.3.14/spring-expression-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-test/2.5.8/spring-boot-starter-test-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-test/2.5.8/spring-boot-test-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/2.5.8/spring-boot-test-autoconfigure-2.5.8.jar:/Users/ranjakademel/.m2/repository/com/jayway/jsonpath/json-path/2.5.0/json-path-2.5.0.jar:/Users/ranjakademel/.m2/repository/net/minidev/json-smart/2.4.7/json-smart-2.4.7.jar:/Users/ranjakademel/.m2/repository/net/minidev/accessors-smart/2.4.7/accessors-smart-2.4.7.jar:/Users/ranjakademel/.m2/repository/org/ow2/asm/asm/9.1/asm-9.1.jar:/Users/ranjakademel/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/Users/ranjakademel/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/ranjakademel/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/ranjakademel/.m2/repository/org/assertj/assertj-core/3.19.0/assertj-core-3.19.0.jar:/Users/ranjakademel/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/ranjakademel/.m2/repository/org/junit/jupiter/junit-jupiter/5.7.2/junit-jupiter-5.7.2.jar:/Users/ranjakademel/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.7.2/junit-jupiter-api-5.7.2.jar:/Users/ranjakademel/.m2/repository/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar:/Users/ranjakademel/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/ranjakademel/.m2/repository/org/junit/platform/junit-platform-commons/1.7.2/junit-platform-commons-1.7.2.jar:/Users/ranjakademel/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.7.2/junit-jupiter-params-5.7.2.jar:/Users/ranjakademel/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.7.2/junit-jupiter-engine-5.7.2.jar:/Users/ranjakademel/.m2/repository/org/junit/platform/junit-platform-engine/1.7.2/junit-platform-engine-1.7.2.jar:/Users/ranjakademel/.m2/repository/org/mockito/mockito-core/3.9.0/mockito-core-3.9.0.jar:/Users/ranjakademel/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/ranjakademel/.m2/repository/net/bytebuddy/byte-buddy-agent/1.10.22/byte-buddy-agent-1.10.22.jar:/Users/ranjakademel/.m2/repository/org/objenesis/objenesis/3.2/objenesis-3.2.jar:/Users/ranjakademel/.m2/repository/org/mockito/mockito-junit-jupiter/3.9.0/mockito-junit-jupiter-3.9.0.jar:/Users/ranjakademel/.m2/repository/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/Users/ranjakademel/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-core/5.3.14/spring-core-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-jcl/5.3.14/spring-jcl-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-test/5.3.14/spring-test-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/xmlunit/xmlunit-core/2.8.4/xmlunit-core-2.8.4.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.8/spring-boot-starter-data-jpa-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.8/spring-boot-starter-aop-2.5.8.jar:/Users/ranjakademel/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/Users/ranjakademel/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.8/spring-boot-starter-jdbc-2.5.8.jar:/Users/ranjakademel/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-jdbc/5.3.14/spring-jdbc-5.3.14.jar:/Users/ranjakademel/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/ranjakademel/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/ranjakademel/.m2/repository/org/hibernate/hibernate-core/5.4.33/hibernate-core-5.4.33.jar:/Users/ranjakademel/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/ranjakademel/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/ranjakademel/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/ranjakademel/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/ranjakademel/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/ranjakademel/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/ranjakademel/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.5/jaxb-runtime-2.3.5.jar:/Users/ranjakademel/.m2/repository/org/glassfish/jaxb/txw2/2.3.5/txw2-2.3.5.jar:/Users/ranjakademel/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/ranjakademel/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/ranjakademel/.m2/repository/org/springframework/data/spring-data-jpa/2.5.7/spring-data-jpa-2.5.7.jar:/Users/ranjakademel/.m2/repository/org/springframework/data/spring-data-commons/2.5.7/spring-data-commons-2.5.7.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-orm/5.3.14/spring-orm-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-tx/5.3.14/spring-tx-5.3.14.jar:/Users/ranjakademel/.m2/repository/org/springframework/spring-aspects/5.3.14/spring-aspects-5.3.14.jar:/Users/ranjakademel/.m2/repository/com/h2database/h2/2.0.206/h2-2.0.206.jar:/Users/ranjakademel/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.6/jackson-databind-2.12.6.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.6/jackson-core-2.12.6.jar:/Users/ranjakademel/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.6/jackson-annotations-2.12.6.jar:/Users/ranjakademel/.m2/repository/org/projectlombok/lombok/1.18.20/lombok-1.18.20.jar:/Users/ranjakademel/.m2/repository/org/mapstruct/mapstruct/1.4.2.Final/mapstruct-1.4.2.Final.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/ranjakademel"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2020-01-14"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/ranjakademel/Documents/Personal/tutorials/depthchart"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/ranjakademel/Documents/Personal/tutorials/depthchart/target/surefire/surefirebooter2660267494728524622.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="13.0.2+8"/>
    <property name="user.name" value="ranjakademel"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="10.16"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="spring.beaninfo.ignore" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/ranjakademel/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/z7/3l_55l293fg5q3c___pp8bgh0000gn/T/"/>
    <property name="com.zaxxer.hikari.pool_number" value="2"/>
    <property name="java.version" value="13.0.2"/>
    <property name="user.dir" value="/Users/ranjakademel/Documents/Personal/tutorials/depthchart"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="81076"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.library.path" value="/Users/ranjakademel/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="13.0.2+8"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="57.0"/>
  </properties>
  <testcase name="createSport_1" classname="com.exercise.depthchart.service.BusinessLogicTest" time="0.138">
    <system-out><![CDATA[2022-04-11 17:21:13.507  INFO 81076 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.exercise.depthchart.service.BusinessLogicTest], using SpringBootContextLoader
2022-04-11 17:21:13.507  INFO 81076 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.exercise.depthchart.service.BusinessLogicTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-04-11 17:21:13.507  INFO 81076 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.exercise.depthchart.service.BusinessLogicTest]: BusinessLogicTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-04-11 17:21:13.512  INFO 81076 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.exercise.depthchart.Application for test class com.exercise.depthchart.service.BusinessLogicTest
2022-04-11 17:21:13.514  INFO 81076 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-04-11 17:21:13.515  INFO 81076 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@9fd3b61, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4a34de5e, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@48da5106, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@31cddb11, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@510bd87a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3d213a2b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@27691ee8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@78a34c47, org.springframework.test.context.event.EventPublishingTestExecutionListener@77648321, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@43201f84, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2c51c756, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4ef277ef, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1ddc889b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5ec3689b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7c0a6f62]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.5.8)

2022-04-11 17:21:13.541  INFO 81076 --- [           main] c.e.d.service.BusinessLogicTest          : Starting BusinessLogicTest using Java 13.0.2 on Ranjakas-MacBook-Pro.local with PID 81076 (started by ranjakademel in /Users/ranjakademel/Documents/Personal/tutorials/depthchart)
2022-04-11 17:21:13.541  INFO 81076 --- [           main] c.e.d.service.BusinessLogicTest          : No active profile set, falling back to default profiles: default
2022-04-11 17:21:13.659  INFO 81076 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-04-11 17:21:13.667  INFO 81076 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 3 JPA repository interfaces.
2022-04-11 17:21:13.800  INFO 81076 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-04-11 17:21:13.803  INFO 81076 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2022-04-11 17:21:13.805  INFO 81076 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2022-04-11 17:21:13.807  INFO 81076 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: create table player (id integer not null, depth integer, name varchar(255), position_name integer, primary key (id))
Hibernate: create table position (id integer not null, name varchar(255), sport_name integer, primary key (id))
Hibernate: create table sport (id integer not null, name varchar(255), primary key (id))
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: alter table player add constraint FKbd3d11wv8pr5vpr4x6k5xltr9 foreign key (position_name) references position on delete cascade
Hibernate: alter table position add constraint FKjnjxnfd6w4vwqtmvitt2qbeqq foreign key (sport_name) references sport on delete cascade
2022-04-11 17:21:13.841  INFO 81076 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-04-11 17:21:13.841  INFO 81076 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-04-11 17:21:13.940  WARN 81076 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-04-11 17:21:13.963  INFO 81076 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-ui'. Database available at 'jdbc:h2:mem:testdb'
2022-04-11 17:21:13.969  INFO 81076 --- [           main] c.e.d.service.BusinessLogicTest          : Started BusinessLogicTest in 0.452 seconds (JVM running for 4.753)
Hibernate: select sport0_.id as id1_2_, sport0_.name as name2_2_ from sport sport0_ where sport0_.name=?
Hibernate: call next value for hibernate_sequence
Hibernate: insert into sport (name, id) values (?, ?)
Hibernate: call next value for hibernate_sequence
Hibernate: insert into position (name, sport_name, id) values (?, ?, ?)
Hibernate: call next value for hibernate_sequence
Hibernate: insert into position (name, sport_name, id) values (?, ?, ?)
Hibernate: call next value for hibernate_sequence
Hibernate: insert into position (name, sport_name, id) values (?, ?, ?)
Hibernate: call next value for hibernate_sequence
Hibernate: insert into position (name, sport_name, id) values (?, ?, ?)
Hibernate: call next value for hibernate_sequence
Hibernate: insert into position (name, sport_name, id) values (?, ?, ?)
Hibernate: call next value for hibernate_sequence
Hibernate: insert into position (name, sport_name, id) values (?, ?, ?)
Hibernate: call next value for hibernate_sequence
Hibernate: insert into position (name, sport_name, id) values (?, ?, ?)
Hibernate: call next value for hibernate_sequence
Hibernate: insert into position (name, sport_name, id) values (?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="createSport_2" classname="com.exercise.depthchart.service.BusinessLogicTest" time="0.02">
    <system-out><![CDATA[Hibernate: select sport0_.id as id1_2_, sport0_.name as name2_2_ from sport sport0_ where sport0_.name=?
Hibernate: select positions0_.sport_name as sport_na3_1_0_, positions0_.id as id1_1_0_, positions0_.id as id1_1_1_, positions0_.name as name2_1_1_, positions0_.sport_name as sport_na3_1_1_ from position positions0_ where positions0_.sport_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
]]></system-out>
  </testcase>
  <testcase name="addPlayerToDepthChartTest_1" classname="com.exercise.depthchart.service.BusinessLogicTest" time="0.069">
    <system-out><![CDATA[Hibernate: select position0_.id as id1_1_, position0_.name as name2_1_, position0_.sport_name as sport_na3_1_ from position position0_ where position0_.name=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_, positions1_.sport_name as sport_na3_1_1_, positions1_.id as id1_1_1_, positions1_.id as id1_1_2_, positions1_.name as name2_1_2_, positions1_.sport_name as sport_na3_1_2_, players2_.position_name as position4_0_3_, players2_.id as id1_0_3_, players2_.id as id1_0_4_, players2_.depth as depth2_0_4_, players2_.name as name3_0_4_ from sport sport0_ left outer join position positions1_ on sport0_.id=positions1_.sport_name left outer join player players2_ on positions1_.id=players2_.position_name where sport0_.id=?
Hibernate: select player0_.id as id1_0_, player0_.depth as depth2_0_, player0_.name as name3_0_ from player player0_ where player0_.name=?
Hibernate: select position0_.id as id1_1_1_, position0_.name as name2_1_1_, position0_.sport_name as sport_na3_1_1_, players1_.position_name as position4_0_3_, players1_.id as id1_0_3_, players1_.id as id1_0_0_, players1_.depth as depth2_0_0_, players1_.name as name3_0_0_ from position position0_ left outer join player players1_ on position0_.id=players1_.position_name where position0_.id=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_ from sport sport0_ where sport0_.id=?
Hibernate: select positions0_.sport_name as sport_na3_1_0_, positions0_.id as id1_1_0_, positions0_.id as id1_1_1_, positions0_.name as name2_1_1_, positions0_.sport_name as sport_na3_1_1_ from position positions0_ where positions0_.sport_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: call next value for hibernate_sequence
Hibernate: insert into player (depth, name, id) values (?, ?, ?)
Hibernate: update player set position_name=? where id=?
Hibernate: select position0_.id as id1_1_, position0_.name as name2_1_, position0_.sport_name as sport_na3_1_ from position position0_ where position0_.name=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_, positions1_.sport_name as sport_na3_1_1_, positions1_.id as id1_1_1_, positions1_.id as id1_1_2_, positions1_.name as name2_1_2_, positions1_.sport_name as sport_na3_1_2_, players2_.position_name as position4_0_3_, players2_.id as id1_0_3_, players2_.id as id1_0_4_, players2_.depth as depth2_0_4_, players2_.name as name3_0_4_ from sport sport0_ left outer join position positions1_ on sport0_.id=positions1_.sport_name left outer join player players2_ on positions1_.id=players2_.position_name where sport0_.id=?
Hibernate: select player0_.id as id1_0_, player0_.depth as depth2_0_, player0_.name as name3_0_ from player player0_ where player0_.name=?
Hibernate: select position0_.id as id1_1_1_, position0_.name as name2_1_1_, position0_.sport_name as sport_na3_1_1_, players1_.position_name as position4_0_3_, players1_.id as id1_0_3_, players1_.id as id1_0_0_, players1_.depth as depth2_0_0_, players1_.name as name3_0_0_ from position position0_ left outer join player players1_ on position0_.id=players1_.position_name where position0_.id=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_ from sport sport0_ where sport0_.id=?
Hibernate: select positions0_.sport_name as sport_na3_1_0_, positions0_.id as id1_1_0_, positions0_.id as id1_1_1_, positions0_.name as name2_1_1_, positions0_.sport_name as sport_na3_1_1_ from position positions0_ where positions0_.sport_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: call next value for hibernate_sequence
Hibernate: insert into player (depth, name, id) values (?, ?, ?)
Hibernate: update player set position_name=? where id=?
Hibernate: select position0_.id as id1_1_, position0_.name as name2_1_, position0_.sport_name as sport_na3_1_ from position position0_ where position0_.name=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_, positions1_.sport_name as sport_na3_1_1_, positions1_.id as id1_1_1_, positions1_.id as id1_1_2_, positions1_.name as name2_1_2_, positions1_.sport_name as sport_na3_1_2_, players2_.position_name as position4_0_3_, players2_.id as id1_0_3_, players2_.id as id1_0_4_, players2_.depth as depth2_0_4_, players2_.name as name3_0_4_ from sport sport0_ left outer join position positions1_ on sport0_.id=positions1_.sport_name left outer join player players2_ on positions1_.id=players2_.position_name where sport0_.id=?
Hibernate: select player0_.id as id1_0_, player0_.depth as depth2_0_, player0_.name as name3_0_ from player player0_ where player0_.name=?
Hibernate: select position0_.id as id1_1_1_, position0_.name as name2_1_1_, position0_.sport_name as sport_na3_1_1_, players1_.position_name as position4_0_3_, players1_.id as id1_0_3_, players1_.id as id1_0_0_, players1_.depth as depth2_0_0_, players1_.name as name3_0_0_ from position position0_ left outer join player players1_ on position0_.id=players1_.position_name where position0_.id=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_ from sport sport0_ where sport0_.id=?
Hibernate: select positions0_.sport_name as sport_na3_1_0_, positions0_.id as id1_1_0_, positions0_.id as id1_1_1_, positions0_.name as name2_1_1_, positions0_.sport_name as sport_na3_1_1_ from position positions0_ where positions0_.sport_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: call next value for hibernate_sequence
Hibernate: insert into player (depth, name, id) values (?, ?, ?)
Hibernate: update player set position_name=? where id=?
Hibernate: select position0_.id as id1_1_, position0_.name as name2_1_, position0_.sport_name as sport_na3_1_ from position position0_ where position0_.name=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_, positions1_.sport_name as sport_na3_1_1_, positions1_.id as id1_1_1_, positions1_.id as id1_1_2_, positions1_.name as name2_1_2_, positions1_.sport_name as sport_na3_1_2_, players2_.position_name as position4_0_3_, players2_.id as id1_0_3_, players2_.id as id1_0_4_, players2_.depth as depth2_0_4_, players2_.name as name3_0_4_ from sport sport0_ left outer join position positions1_ on sport0_.id=positions1_.sport_name left outer join player players2_ on positions1_.id=players2_.position_name where sport0_.id=?
Hibernate: select player0_.id as id1_0_, player0_.depth as depth2_0_, player0_.name as name3_0_ from player player0_ where player0_.name=?
Hibernate: select position0_.id as id1_1_1_, position0_.name as name2_1_1_, position0_.sport_name as sport_na3_1_1_, players1_.position_name as position4_0_3_, players1_.id as id1_0_3_, players1_.id as id1_0_0_, players1_.depth as depth2_0_0_, players1_.name as name3_0_0_ from position position0_ left outer join player players1_ on position0_.id=players1_.position_name where position0_.id=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_ from sport sport0_ where sport0_.id=?
Hibernate: select positions0_.sport_name as sport_na3_1_0_, positions0_.id as id1_1_0_, positions0_.id as id1_1_1_, positions0_.name as name2_1_1_, positions0_.sport_name as sport_na3_1_1_ from position positions0_ where positions0_.sport_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: call next value for hibernate_sequence
Hibernate: insert into player (depth, name, id) values (?, ?, ?)
Hibernate: update player set position_name=? where id=?
]]></system-out>
  </testcase>
  <testcase name="getPlayersUnderPlayerTest_1" classname="com.exercise.depthchart.service.BusinessLogicTest" time="0.008">
    <system-out><![CDATA[Hibernate: select position0_.id as id1_1_, position0_.name as name2_1_, position0_.sport_name as sport_na3_1_ from position position0_ where position0_.name=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_, positions1_.sport_name as sport_na3_1_1_, positions1_.id as id1_1_1_, positions1_.id as id1_1_2_, positions1_.name as name2_1_2_, positions1_.sport_name as sport_na3_1_2_, players2_.position_name as position4_0_3_, players2_.id as id1_0_3_, players2_.id as id1_0_4_, players2_.depth as depth2_0_4_, players2_.name as name3_0_4_ from sport sport0_ left outer join position positions1_ on sport0_.id=positions1_.sport_name left outer join player players2_ on positions1_.id=players2_.position_name where sport0_.id=?
]]></system-out>
  </testcase>
  <testcase name="removePlayerFromDepthChartTest_1" classname="com.exercise.depthchart.service.BusinessLogicTest" time="0.02">
    <system-out><![CDATA[Hibernate: select position0_.id as id1_1_, position0_.name as name2_1_, position0_.sport_name as sport_na3_1_ from position position0_ where position0_.name=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_, positions1_.sport_name as sport_na3_1_1_, positions1_.id as id1_1_1_, positions1_.id as id1_1_2_, positions1_.name as name2_1_2_, positions1_.sport_name as sport_na3_1_2_, players2_.position_name as position4_0_3_, players2_.id as id1_0_3_, players2_.id as id1_0_4_, players2_.depth as depth2_0_4_, players2_.name as name3_0_4_ from sport sport0_ left outer join position positions1_ on sport0_.id=positions1_.sport_name left outer join player players2_ on positions1_.id=players2_.position_name where sport0_.id=?
Hibernate: select player0_.id as id1_0_0_, player0_.depth as depth2_0_0_, player0_.name as name3_0_0_ from player player0_ where player0_.id=?
Hibernate: delete from player where id=?
Hibernate: select position0_.id as id1_1_, position0_.name as name2_1_, position0_.sport_name as sport_na3_1_ from position position0_ where position0_.name=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_, positions1_.sport_name as sport_na3_1_1_, positions1_.id as id1_1_1_, positions1_.id as id1_1_2_, positions1_.name as name2_1_2_, positions1_.sport_name as sport_na3_1_2_, players2_.position_name as position4_0_3_, players2_.id as id1_0_3_, players2_.id as id1_0_4_, players2_.depth as depth2_0_4_, players2_.name as name3_0_4_ from sport sport0_ left outer join position positions1_ on sport0_.id=positions1_.sport_name left outer join player players2_ on positions1_.id=players2_.position_name where sport0_.id=?
Hibernate: select position0_.id as id1_1_1_, position0_.name as name2_1_1_, position0_.sport_name as sport_na3_1_1_, players1_.position_name as position4_0_3_, players1_.id as id1_0_3_, players1_.id as id1_0_0_, players1_.depth as depth2_0_0_, players1_.name as name3_0_0_ from position position0_ left outer join player players1_ on position0_.id=players1_.position_name where position0_.id=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_ from sport sport0_ where sport0_.id=?
Hibernate: select positions0_.sport_name as sport_na3_1_0_, positions0_.id as id1_1_0_, positions0_.id as id1_1_1_, positions0_.name as name2_1_1_, positions0_.sport_name as sport_na3_1_1_ from position positions0_ where positions0_.sport_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
Hibernate: select players0_.position_name as position4_0_0_, players0_.id as id1_0_0_, players0_.id as id1_0_1_, players0_.depth as depth2_0_1_, players0_.name as name3_0_1_ from player players0_ where players0_.position_name=?
PositionDTO(name=WR, playerIds=[10, 11])
]]></system-out>
  </testcase>
  <testcase name="removePlayerFromDepthChartTest_2" classname="com.exercise.depthchart.service.BusinessLogicTest" time="0.006">
    <system-out><![CDATA[Hibernate: select position0_.id as id1_1_, position0_.name as name2_1_, position0_.sport_name as sport_na3_1_ from position position0_ where position0_.name=?
Hibernate: select sport0_.id as id1_2_0_, sport0_.name as name2_2_0_, positions1_.sport_name as sport_na3_1_1_, positions1_.id as id1_1_1_, positions1_.id as id1_1_2_, positions1_.name as name2_1_2_, positions1_.sport_name as sport_na3_1_2_, players2_.position_name as position4_0_3_, players2_.id as id1_0_3_, players2_.id as id1_0_4_, players2_.depth as depth2_0_4_, players2_.name as name3_0_4_ from sport sport0_ left outer join position positions1_ on sport0_.id=positions1_.sport_name left outer join player players2_ on positions1_.id=players2_.position_name where sport0_.id=?
PositionDTO(name=WR, playerIds=[10, 11])
]]></system-out>
  </testcase>
</testsuite>